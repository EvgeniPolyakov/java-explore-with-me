{
	"info": {
		"_postman_id": "cb56ddeb-80a7-42f5-add5-58216fc89fc7",
		"name": "feature tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21129719"
	},
	"item": [
		{
			"name": "Create Users & Events",
			"item": [
				{
					"name": "User1 Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"user1\",\n  \"email\": \"mail@yandex.ru\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User2 Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"User2\",\n  \"email\": \"mail2@yandex.ru\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User3 Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"User3\",\n  \"email\": \"mail3@yandex.ru\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"category\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event 1 Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"event1\",\n  \"annotation\": \"annotationannotationannotationannotation1\",\n  \"description\": \"descriptiondescriptiondescriptiondescription1\",\n  \"category\": 1,\n  \"eventDate\": \"2222-11-11 22:22:22\",\n  \"location\": {\n        \"lat\": 36.0,\n        \"lon\": 329.0\n    },\n  \"paid\": false,\n  \"participantLimit\": 498,\n  \"requestModeration\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required)"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event 2 Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"event2\",\n  \"annotation\": \"annotationannotationannotationannotation2\",\n  \"description\": \"descriptiondescriptiondescriptiondescription2\",\n  \"category\": 1,\n  \"eventDate\": \"2222-11-11 22:22:22\",\n  \"location\": {\n        \"lat\": 36.0,\n        \"lon\": 329.0\n    },\n  \"paid\": false,\n  \"participantLimit\": 498,\n  \"requestModeration\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "2",
									"description": "(Required)"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Event 3 Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"event3\",\n  \"annotation\": \"annotationannotationannotationannotation3\",\n  \"description\": \"descriptiondescriptiondescriptiondescription3\",\n  \"category\": 1,\n  \"eventDate\": \"2222-11-11 22:22:22\",\n  \"location\": {\n        \"lat\": 36.0,\n        \"lon\": 329.0\n    },\n  \"paid\": false,\n  \"participantLimit\": 498,\n  \"requestModeration\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/:id/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required)"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Publish Event 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"event3\",\n  \"annotation\": \"annotationannotationannotationannotation3\",\n  \"description\": \"descriptiondescriptiondescriptiondescription3\",\n  \"category\": 1,\n  \"eventDate\": \"2222-11-11 22:22:22\",\n  \"location\": {\n        \"lat\": 36.0,\n        \"lon\": 329.0\n    },\n  \"paid\": false,\n  \"participantLimit\": 498,\n  \"requestModeration\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/events/:id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"events",
								":id",
								"publish"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Publish Event 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"event3\",\n  \"annotation\": \"annotationannotationannotationannotation3\",\n  \"description\": \"descriptiondescriptiondescriptiondescription3\",\n  \"category\": 1,\n  \"eventDate\": \"2222-11-11 22:22:22\",\n  \"location\": {\n        \"lat\": 36.0,\n        \"lon\": 329.0\n    },\n  \"paid\": false,\n  \"participantLimit\": 498,\n  \"requestModeration\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/events/:id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"events",
								":id",
								"publish"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Publish Event 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"event3\",\n  \"annotation\": \"annotationannotationannotationannotation3\",\n  \"description\": \"descriptiondescriptiondescriptiondescription3\",\n  \"category\": 1,\n  \"eventDate\": \"2222-11-11 22:22:22\",\n  \"location\": {\n        \"lat\": 36.0,\n        \"lon\": 329.0\n    },\n  \"paid\": false,\n  \"participantLimit\": 498,\n  \"requestModeration\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/events/:id/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"events",
								":id",
								"publish"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"dolore ullamco\",\n  \"name\": \"est adipisicing\",\n  \"id\": -35528664,\n  \"email\": \"Lorem mollit nisi anim\",\n  \"birthday\": \"1946-08-20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Request: User 1 -> Event 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/requests?eventId=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"requests"
							],
							"query": [
								{
									"key": "eventId",
									"value": "2",
									"description": "(Required) id события"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Обратите внимание:\n- нельзя добавить повторный запрос\n- инициатор события не может добавить запрос на участие в своём событии\n- нельзя участвовать в неопубликованном событии\n- если у события достигнут лимит запросов на участие - необходимо вернуть ошибку\n- если для события отключена пре-модерация запросов на участие, то запрос должен автоматически перейти в состояние подтвержденного"
					},
					"response": [
						{
							"name": "Заявка создана",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created\": \"1969-01-16T10:39:34.967Z\",\n  \"event\": 1,\n  \"id\": 3,\n  \"requester\": 2,\n  \"status\": \"PENDING\"\n}"
						},
						{
							"name": "Запрос составлен с ошибкой",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
						},
						{
							"name": "Не выполнены условия для совершения операции",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
						},
						{
							"name": "Объект не найден",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
						},
						{
							"name": "Запрос приводит к нарушению целостности данных",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
						},
						{
							"name": "Внутренняя ошибка сервера",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
						}
					]
				},
				{
					"name": "Request: User 2 -> Event 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/requests?eventId=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"requests"
							],
							"query": [
								{
									"key": "eventId",
									"value": "3",
									"description": "(Required) id события"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						},
						"description": "Обратите внимание:\n- нельзя добавить повторный запрос\n- инициатор события не может добавить запрос на участие в своём событии\n- нельзя участвовать в неопубликованном событии\n- если у события достигнут лимит запросов на участие - необходимо вернуть ошибку\n- если для события отключена пре-модерация запросов на участие, то запрос должен автоматически перейти в состояние подтвержденного"
					},
					"response": [
						{
							"name": "Заявка создана",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created\": \"1969-01-16T10:39:34.967Z\",\n  \"event\": 1,\n  \"id\": 3,\n  \"requester\": 2,\n  \"status\": \"PENDING\"\n}"
						},
						{
							"name": "Запрос составлен с ошибкой",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
						},
						{
							"name": "Не выполнены условия для совершения операции",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
						},
						{
							"name": "Объект не найден",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
						},
						{
							"name": "Запрос приводит к нарушению целостности данных",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
						},
						{
							"name": "Внутренняя ошибка сервера",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
						}
					]
				},
				{
					"name": "Request: User 3 -> Event 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/requests?eventId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"requests"
							],
							"query": [
								{
									"key": "eventId",
									"value": "1",
									"description": "(Required) id события"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						},
						"description": "Обратите внимание:\n- нельзя добавить повторный запрос\n- инициатор события не может добавить запрос на участие в своём событии\n- нельзя участвовать в неопубликованном событии\n- если у события достигнут лимит запросов на участие - необходимо вернуть ошибку\n- если для события отключена пре-модерация запросов на участие, то запрос должен автоматически перейти в состояние подтвержденного"
					},
					"response": [
						{
							"name": "Заявка создана",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created\": \"1969-01-16T10:39:34.967Z\",\n  \"event\": 1,\n  \"id\": 3,\n  \"requester\": 2,\n  \"status\": \"PENDING\"\n}"
						},
						{
							"name": "Запрос составлен с ошибкой",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
						},
						{
							"name": "Не выполнены условия для совершения операции",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
						},
						{
							"name": "Объект не найден",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
						},
						{
							"name": "Запрос приводит к нарушению целостности данных",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
						},
						{
							"name": "Внутренняя ошибка сервера",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/requests?eventId=32652613",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"requests"
									],
									"query": [
										{
											"key": "eventId",
											"value": "32652613"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "32652613",
											"description": "(Required) id текущего пользователя"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Feed tests",
			"item": [
				{
					"name": "User 3 -> set privacy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/privacy?isPrivate=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								"privacy"
							],
							"query": [
								{
									"key": "isPrivate",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Friends: User 1 -> User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "2",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Friends: User 1 -> User 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,403]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "3",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Friends: User 2 -> User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId"
							],
							"variable": [
								{
									"key": "id",
									"value": "2",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Friends: User 2 -> User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId"
							],
							"variable": [
								{
									"key": "id",
									"value": "2",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 2: get events User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "2",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 1: get events User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Friends: User 3 -> User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Friends: User 3 -> User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/:friendId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								":friendId"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) "
								},
								{
									"key": "friendId",
									"value": "2",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/friends/:friendId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"friends",
										":friendId"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										},
										{
											"key": "friendId",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 3: get feed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "3",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 3: get feed - exclude",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								"events"
							],
							"query": [
								{
									"key": "excludeOwn",
									"value": "true",
									"disabled": true
								},
								{
									"key": "excludeMutual",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 1 -> set privacy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/privacy?isPrivate=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								"privacy"
							],
							"query": [
								{
									"key": "isPrivate",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 2 -> set privacy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/privacy?isPrivate=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								"privacy"
							],
							"query": [
								{
									"key": "isPrivate",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "2",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "User 3: get feed - exclude again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:id/friends/events?excludeMutual=true&excludeOwn=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":id",
								"friends",
								"events"
							],
							"query": [
								{
									"key": "excludeMutual",
									"value": "true"
								},
								{
									"key": "excludeOwn",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-29029902",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}